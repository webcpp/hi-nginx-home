{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4ecb\u7ecd \u00b6 HI-NGINX\u662fNGINX\u7684\u589e\u5f3a\u7248\u3002 \u5b83\u9664\u4e86\u4fdd\u7559NGINX\u5168\u90e8\u529f\u80fd\u4e4b\u5916\uff0c\u540c\u65f6\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884cweb\u6df7\u5408\u5f00\u53d1\u3002 \u5b83\u652f\u6301\u7684\u7f16\u7a0b\u8bed\u8a00\u5305\u62ec\uff1a C++ java lua python php quickjs \u8fd9\u4e9b\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u524d\u4e24\u79cd\u5c5e\u4e8e\u7f16\u8bd1\u578b\u8bed\u8a00\uff0c\u540e\u51e0\u79cd\u5219\u5c5e\u4e8e\u89e3\u91ca\u578b\u8bed\u8a00\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f53\u89e3\u91ca\u578b\u8bed\u8a00\u65e0\u529b\u627f\u62c5\u6027\u80fd\u9700\u6c42\u65f6\uff0c\u4f60\u53ef\u4ee5\u5207\u6362\u81f3\u7f16\u8bd1\u578b\u8bed\u8a00\uff1b\u800c\u5f53\u7f16\u8bd1\u578b\u8bed\u8a00\u65e0\u529b\u8ffd\u8d76\u5f00\u53d1\u8fdb\u5ea6\u8868\u65f6\uff0c\u4f60\u53ef\u4ee5\u5207\u6362\u81f3\u89e3\u91ca\u578b\u8bed\u8a00\u3002 \u56e0\u6b64\uff0c\u5f53\u4f60\u6240\u5728\u7684\u5f00\u53d1\u56e2\u961f\u8db3\u591f\u5927\u5e76\u4e14\u8db3\u591f\u591a\u5143\u65f6\uff0cHI-NGINX\u5c06\u662f\u975e\u5e38\u5408\u9002\u7684\u56e2\u961f\u534f\u4f5c\u5f00\u53d1\u5de5\u5177\u3002 \u66f4\u4e3b\u8981\u7684\u662f\uff0cHI-NGINX\u63d0\u4f9b\u7684\u5185\u5d4c\u5e94\u7528\u670d\u52a1\u7684\u6027\u80fd\u8fdc\u6bd4\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u7684\u6027\u80fd\u8981\u9ad8\uff0c\u5b9e\u9645\u4e0a\u8981\u9ad8\u5f97\u591a\u3002 \u4ed3\u5e93 \u00b6 HI-NGINX REPO \u66f4\u65b0 \u00b6 HI-NGINX VERSION-2.1.2\u5df2\u7ecf\u53d1\u5e03,\u79fb\u9664\u4e86java\u4e2d\u5bf9jsr223\u7684\u652f\u6301\u3002\u8be5\u652f\u6301\u56e0\u4e3ajava15\u5df2\u7ecf\u4e0d\u518d\u652f\u6301javascript \u5f15\u64ce\u800c\u663e\u5f97\u591a\u4f59\u3002","title":"\u4ecb\u7ecd"},{"location":"#_1","text":"HI-NGINX\u662fNGINX\u7684\u589e\u5f3a\u7248\u3002 \u5b83\u9664\u4e86\u4fdd\u7559NGINX\u5168\u90e8\u529f\u80fd\u4e4b\u5916\uff0c\u540c\u65f6\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884cweb\u6df7\u5408\u5f00\u53d1\u3002 \u5b83\u652f\u6301\u7684\u7f16\u7a0b\u8bed\u8a00\u5305\u62ec\uff1a C++ java lua python php quickjs \u8fd9\u4e9b\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u524d\u4e24\u79cd\u5c5e\u4e8e\u7f16\u8bd1\u578b\u8bed\u8a00\uff0c\u540e\u51e0\u79cd\u5219\u5c5e\u4e8e\u89e3\u91ca\u578b\u8bed\u8a00\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f53\u89e3\u91ca\u578b\u8bed\u8a00\u65e0\u529b\u627f\u62c5\u6027\u80fd\u9700\u6c42\u65f6\uff0c\u4f60\u53ef\u4ee5\u5207\u6362\u81f3\u7f16\u8bd1\u578b\u8bed\u8a00\uff1b\u800c\u5f53\u7f16\u8bd1\u578b\u8bed\u8a00\u65e0\u529b\u8ffd\u8d76\u5f00\u53d1\u8fdb\u5ea6\u8868\u65f6\uff0c\u4f60\u53ef\u4ee5\u5207\u6362\u81f3\u89e3\u91ca\u578b\u8bed\u8a00\u3002 \u56e0\u6b64\uff0c\u5f53\u4f60\u6240\u5728\u7684\u5f00\u53d1\u56e2\u961f\u8db3\u591f\u5927\u5e76\u4e14\u8db3\u591f\u591a\u5143\u65f6\uff0cHI-NGINX\u5c06\u662f\u975e\u5e38\u5408\u9002\u7684\u56e2\u961f\u534f\u4f5c\u5f00\u53d1\u5de5\u5177\u3002 \u66f4\u4e3b\u8981\u7684\u662f\uff0cHI-NGINX\u63d0\u4f9b\u7684\u5185\u5d4c\u5e94\u7528\u670d\u52a1\u7684\u6027\u80fd\u8fdc\u6bd4\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u7684\u6027\u80fd\u8981\u9ad8\uff0c\u5b9e\u9645\u4e0a\u8981\u9ad8\u5f97\u591a\u3002","title":"\u4ecb\u7ecd"},{"location":"#_2","text":"HI-NGINX REPO","title":"\u4ed3\u5e93"},{"location":"#_3","text":"HI-NGINX VERSION-2.1.2\u5df2\u7ecf\u53d1\u5e03,\u79fb\u9664\u4e86java\u4e2d\u5bf9jsr223\u7684\u652f\u6301\u3002\u8be5\u652f\u6301\u56e0\u4e3ajava15\u5df2\u7ecf\u4e0d\u518d\u652f\u6301javascript \u5f15\u64ce\u800c\u663e\u5f97\u591a\u4f59\u3002","title":"\u66f4\u65b0"},{"location":"cpp/","text":"c++ \u793a\u4f8b \u00b6 #include \"servlet.hpp\" namespace hi { class hello : public servlet { public : void handler ( request & req , response & res ) { res . headers . find ( \"Content-Type\" ) -> second = \"text/plain;charset=UTF-8\" ; res . content = \"hello,world\" ; res . status = 200 ; } }; } extern \"C\" hi :: servlet * create () { return new hi :: hello (); } extern \"C\" void destroy ( hi :: servlet * p ) { delete p ; }","title":"c++"},{"location":"cpp/#c","text":"#include \"servlet.hpp\" namespace hi { class hello : public servlet { public : void handler ( request & req , response & res ) { res . headers . find ( \"Content-Type\" ) -> second = \"text/plain;charset=UTF-8\" ; res . content = \"hello,world\" ; res . status = 200 ; } }; } extern \"C\" hi :: servlet * create () { return new hi :: hello (); } extern \"C\" void destroy ( hi :: servlet * p ) { delete p ; }","title":"c++ \u793a\u4f8b"},{"location":"java/","text":"java \u4f8b\u5b50 \u00b6 package hi ; public class hello implements hi . servlet { public hello () { } public void handler ( hi . request req , hi . response res ) { res . set_content_type ( \"text/plain;charset=UTF-8\" ); res . status = 200 ; res . content = \"hello,world\\n\" ; } }","title":"java"},{"location":"java/#java","text":"package hi ; public class hello implements hi . servlet { public hello () { } public void handler ( hi . request req , hi . response res ) { res . set_content_type ( \"text/plain;charset=UTF-8\" ); res . status = 200 ; res . content = \"hello,world\\n\" ; } }","title":"java \u4f8b\u5b50"},{"location":"lua/","text":"lua \u4f8b\u5b50 \u00b6 hi_res : header ( 'Content-Type' , 'text/plain;charset=UTF-8' ) hi_res : content ( 'hello,world \\n ' ) hi_res : status ( 200 )","title":"lua"},{"location":"lua/#lua","text":"hi_res : header ( 'Content-Type' , 'text/plain;charset=UTF-8' ) hi_res : content ( 'hello,world \\n ' ) hi_res : status ( 200 )","title":"lua \u4f8b\u5b50"},{"location":"php/","text":"php \u4f8b\u5b50 \u00b6 require_once 'hi/servlet.php'; require_once 'hi/route.php'; class index implements \\hi\\servlet { public function handler(\\hi\\request $req, \\hi\\response $res) { $app = \\hi\\route::get_instance(); $app->add('{^/$}', array('GET'), function ($rq, $rs, &$param) { $rs->content = 'hello,world\\n'; $rs->status = 200; }); $app->add('{^/phpinfo/?$}', array('GET'), function($rq, $rs, &$param) { ob_start(); phpinfo(); $rs->content = ob_get_contents(); $rs->status = 200; ob_end_clean(); }); $app->run($req, $res); } }","title":"php"},{"location":"php/#php","text":"require_once 'hi/servlet.php'; require_once 'hi/route.php'; class index implements \\hi\\servlet { public function handler(\\hi\\request $req, \\hi\\response $res) { $app = \\hi\\route::get_instance(); $app->add('{^/$}', array('GET'), function ($rq, $rs, &$param) { $rs->content = 'hello,world\\n'; $rs->status = 200; }); $app->add('{^/phpinfo/?$}', array('GET'), function($rq, $rs, &$param) { ob_start(); phpinfo(); $rs->content = ob_get_contents(); $rs->status = 200; ob_end_clean(); }); $app->run($req, $res); } }","title":"php \u4f8b\u5b50"},{"location":"python/","text":"python \u4f8b\u5b50 \u00b6 hi_res . header ( 'Content-Type' , 'text/plain;charset=UTF-8' ) hi_res . content ( 'hello,world \\n ' ) hi_res . status ( 200 )","title":"python"},{"location":"python/#python","text":"hi_res . header ( 'Content-Type' , 'text/plain;charset=UTF-8' ) hi_res . content ( 'hello,world \\n ' ) hi_res . status ( 200 )","title":"python \u4f8b\u5b50"},{"location":"quickjs/","text":"quickjs \u4f8b\u5b50 \u00b6 import * as hi from \"hi\" ; hi . header ( 'Content-Type' , 'text/plain;charset=UTF-8' ) hi . content ( 'hello,world\\n' ) hi . status ( 200 )","title":"quickjs"},{"location":"quickjs/#quickjs","text":"import * as hi from \"hi\" ; hi . header ( 'Content-Type' , 'text/plain;charset=UTF-8' ) hi . content ( 'hello,world\\n' ) hi . status ( 200 )","title":"quickjs \u4f8b\u5b50"}]}